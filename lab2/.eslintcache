[{"/home/tor/Documents/kurser/edaf90/lab2_3/src/index.js":"1","/home/tor/Documents/kurser/edaf90/lab2_3/src/salad.js":"2","/home/tor/Documents/kurser/edaf90/lab2_3/src/inventory.ES6.js":"3","/home/tor/Documents/kurser/edaf90/lab2_3/src/ComposeSaladModal.js":"4","/home/tor/Documents/kurser/edaf90/lab2_3/src/saladList.js":"5","/home/tor/Documents/kurser/edaf90/lab2_3/src/ComposeSalad.js":"6"},{"size":2002,"mtime":1612475068240,"results":"7","hashOfConfig":"8"},{"size":4574,"mtime":1612475068240,"results":"9","hashOfConfig":"8"},{"size":2865,"mtime":1612475068240,"results":"10","hashOfConfig":"8"},{"size":1977,"mtime":1612475068240,"results":"11","hashOfConfig":"8"},{"size":874,"mtime":1612475068240,"results":"12","hashOfConfig":"8"},{"size":3054,"mtime":1612475068240,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1btqfrr",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/home/tor/Documents/kurser/edaf90/lab2_3/src/index.js",[],["28","29"],"/home/tor/Documents/kurser/edaf90/lab2_3/src/salad.js",[],"/home/tor/Documents/kurser/edaf90/lab2_3/src/inventory.ES6.js",[],"/home/tor/Documents/kurser/edaf90/lab2_3/src/ComposeSaladModal.js",[],"/home/tor/Documents/kurser/edaf90/lab2_3/src/saladList.js",[],"/home/tor/Documents/kurser/edaf90/lab2_3/src/ComposeSalad.js",["30","31"],"import React, { Component } from 'react';\nimport {Salad} from './salad';\n\n\nclass ComposeSalad extends Component {\n  constructor(props){\n    super(props)\n  }\n\n  handleSubmit = (event) => {\n    document.getElementById(\"modalCloseButton\").click()\n    event.preventDefault();\n    this.props.returnSalad(this.props.salad)\n  }\n\n  handleChange = (name,add) =>{\n    if(add)\n      this.props.salad.add(name)\n    else\n      this.props.salad.remove(name)\n    this.props.setSalad(this.props.salad)\n  }\n\n  render() {\n    const inventory = this.props.inventory;\n    let foundations = Object.keys(inventory).filter(name => inventory[name].foundation);\n    let proteins = Object.keys(inventory).filter(name => inventory[name].protein);\n    let dressings = Object.keys(inventory).filter(name => inventory[name].dressing);\n    let extras = Object.keys(inventory).filter(name => inventory[name].extra);\n\n    return (\n      <form id=\"composeSaladForm\" onSubmit={this.handleSubmit}>\n        <SelectSelector selected={this.props.salad.foundation} category=\"foundation\" label={<Label text=\"Choose a foundation:\" />} items={foundations} changeHandler={this.handleChange}/>\n        <CheckboxSelector selected={this.props.salad.proteins} category=\"protein\" label={<Label text=\"Choose as many proteins as you like:\" />} items={proteins} changeHandler={this.handleChange}/>\n        <CheckboxSelector selected={this.props.salad.extras} category=\"extra\" label={<Label text=\"Mix and match your extras:\" />} items={extras} changeHandler={this.handleChange}/>\n        <RadioSelector selected={this.props.salad.dressing} category=\"dressing\" label={<Label text=\"ONLY ONE DRESSING!\" />} items={dressings} changeHandler={this.handleChange}/>\n      </form>\n    );\n  }\n}\n\nconst Label = (props) => <label>{props.text}</label>;\n\nconst SelectSelector = ({label, category, items, selected, changeHandler}) => {\n  return (\n  <>\n    {label}\n    <select name={category} value={selected} onChange={(event)=>changeHandler(event.target.value, selected!==event.target.value)}>\n      {items.map(item => <option key={item} value={item}>{item}</option>)}\n    </select>\n  </>\n  );\n}\n\nconst CheckboxSelector = ({label, category, items, selected, changeHandler}) => {\n  return (\n    <>\n      {label}\n      <ul>\n        {items.map((item, i) =>\n          <li key={item}>\n            <input id={category+i} name={category} type=\"checkbox\" checked={selected.includes(item)} onChange={()=>changeHandler(item,!selected.includes(item))}/>\n            <label htmlFor={category+i} >{item}</label>\n         </li>\n        )}\n      </ul>\n    </>\n  )\n}\n\nconst RadioSelector = ({label, category, items, selected, changeHandler}) => {\n\n  return (\n    <>\n      {label}\n      <ul>\n        {items.map((item, i) =>\n          <li key={item}>\n            <input id={category+i} name={category} type=\"radio\" checked={selected === item} onChange={()=>changeHandler(item, selected !== item)}/>\n            <label htmlFor={category+i} >{item}</label>\n          </li>\n        )}\n      </ul>\n    </>\n  )\n}\n\n\nexport default ComposeSalad;\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":2,"column":9,"nodeType":"38","messageId":"39","endLine":2,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":6,"column":3,"nodeType":"42","messageId":"43","endLine":8,"endColumn":4},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'Salad' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]